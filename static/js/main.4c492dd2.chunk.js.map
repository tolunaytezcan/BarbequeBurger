{"version":3,"sources":["constants/malzemeler.js","components/Fiyat/Liste.js","components/HamburgerApp/index.js","components/HamburgerApp/HamburgerApp.js","components/Hamburger/index.js","components/Hamburger/Hamburger.js","App.js","serviceWorker.js","index.js"],"names":["malzemeler","id","name","color","price","count","Liste","props","malzemeEkle","malzemeCikar","secilenMalzemeler","sıfırla","geneltoplam","fisKes","urunler","filter","malzeme","map","d","a","style","textAlign","azaltButonunuGoster","find","secilenMalzeme","key","border","width","onClick","className","classnames","disabled","enabled","maxWidth","HamburgerApp","state","setState","secilen","totals","tane","x","tarih","Date","window","confirm","getUTCDate","getUTCMonth","getUTCFullYear","getUTCHours","getUTCMinutes","getUTCSeconds","prompt","alert","this","height","margin","maxHeight","Component","Hamburger","invertColor","hex","indexOf","slice","r","parseInt","toString","g","b","padZero","str","len","Array","join","elements","malzemeDivi","backgroundColor","position","marginTop","borderRadius","fontFamily","fontWeight","i","push","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4c492dd2.chunk.js","sourcesContent":["const malzemeler = [\n    {\n        id: 1,\n        name: \"Marul\",\n        color: \"#008000\",\n        price: 1,\n        count: 0\n    },\n    {\n        id: 2,\n        name: \"Cheddar\",\n        color: \"#ffa600\",\n        price: 3,\n        count: 0\n    },\n    {\n        id: 3,\n        name: \"Köfte\",\n        color: \"#5f2604\",\n        price: 6,\n        count: 0\n    },\n    {\n        id: 4,\n        name: \"Domates\",\n        color: \"#ff0000\",\n        price: 2,\n        count: 0\n    },\n    {\n        id: 5,\n        name: \"Pastırma\",\n        color: \"#7C3C2E\",\n        price: 7,\n        count: 0\n    },\n    {\n        id: 6,\n        name: \"Soğan\",\n        color: \"#E5E5E5\",\n        price: 1,\n        count: 0\n    },\n];\n\nexport default malzemeler;\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nconst Liste = (props) => {\n  const {\n    malzemeler,\n    malzemeEkle,\n    malzemeCikar,\n    secilenMalzemeler,\n    sıfırla,\n    geneltoplam,\n    //tane,\n    fisKes,\n  } = props;\n  const urunler = secilenMalzemeler\n    .filter((malzeme) => malzeme.count)\n    .map((d) => ` ${d.name}(${d.count})`);\n  let a = geneltoplam();\n\n  return (\n    <div>\n      <div\n        style={{\n          textAlign:\"center\",\n        }}\n      >\n        <h2>Eklenebilir Malzemeler</h2>\n      </div>\n      <div>\n        <ul>\n          {malzemeler.map((malzeme) => {\n            // mazeleme seculi ise azalt butonu aktif, degilse disabled\n            const azaltButonunuGoster = secilenMalzemeler.find(\n              (secilenMalzeme) => secilenMalzeme.id === malzeme.id\n            );\n            return (\n              <li key={malzeme.id}>\n                <table border=\"1px\">\n                  <tbody>\n                    <tr>\n                      <td width=\"80px\">\n                        <h3>{malzeme.name}</h3>\n                      </td>\n                      <td width=\"100px\">\n                        <button\n                          onClick={() => {\n                            malzemeEkle(malzeme);\n                          }}\n                          className=\"malzeme-ekle\"\n                        >\n                          {malzeme.name} Ekle\n                        </button>\n                      </td>\n                      <td width=\"100px\">\n                        <button\n                          onClick={() => {\n                            malzemeCikar(malzeme);\n                          }}\n                          className={classnames({\n                            \"malzeme-cikar\": true,\n                            disabled: !azaltButonunuGoster,\n                            enabled: azaltButonunuGoster,\n                          })}\n                        >\n                          {malzeme.name} Çıkar\n                        </button>\n                      </td>\n                      <td>\n                        <h3>{`Fiyat: ${malzeme.price}₺`}</h3>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div\n        style={{\n          maxWidth: \"150px\",\n        }}\n      >\n        <h3>{`Eklenen Ürünler:${urunler}`}</h3>\n        <h2>Toplam = {geneltoplam()}₺</h2>\n      </div>\n\n      <button\n        onClick={() => {\n          fisKes(a, urunler);\n        }}\n        className=\"malzeme-ekle\"\n      >\n        Fiş Kes\n      </button>\n\n      <button\n        onClick={() => {\n          sıfırla();\n        }}\n        className=\"malzeme-cikar\"\n      >\n        Sıfırla\n      </button>\n    \n    </div>\n  );\n};\n\nexport default Liste;\n","import HamburgerApp from \"./HamburgerApp\";\n\nexport default HamburgerApp;","import React, { Component } from \"react\";\nimport malzemeler from \"../../constants/malzemeler\";\nimport \"./styles.css\";\nimport { Hamburger } from \"../../components\";\nimport Liste from \"../Fiyat/Liste\";\n\nclass HamburgerApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secilenMalzemeler: [],\n    };\n  }\n\n  malzemeEkle = (malzeme) => {\n    // var mi yok mu kontrol ediyoruz\n    const varMi = this.state.secilenMalzemeler.find(\n      (secilenMalzeme) => secilenMalzeme.id === malzeme.id\n    );\n    // var ise sayisini artircaz, yok ise arraye ekliyoruz\n    //console.log(\"var mi yok mu\", varMi);\n    if (varMi) {\n      this.setState({\n        secilenMalzemeler: this.state.secilenMalzemeler.map(\n          (secilenMalzeme) => {\n            if (secilenMalzeme.id === malzeme.id) {\n              return { ...secilenMalzeme, count: secilenMalzeme.count + 1 };\n            } else {\n              return secilenMalzeme;\n            }\n          }\n        ),\n      });\n    } else {\n      this.setState({\n        secilenMalzemeler: [\n          ...this.state.secilenMalzemeler,\n          { ...malzeme, count: 1 },\n        ],\n      });\n    }\n  };\n\n  malzemeCikar = (malzeme) => {\n    /// olmadigi durumda azalta hic basilamayacagi icin bu satirda malzemenin secili olduguna eminim.\n    const secilenMalzeme = this.state.secilenMalzemeler.find(\n      (secilen) => secilen.id === malzeme.id\n    );\n    const secilenMalzemeCount = secilenMalzeme.count;\n    // sayi 1 ise secilenlerden tamamen cikartiyorum, 1 den buyuk ise bu sayiyi azaltiyorum\n    if (secilenMalzemeCount > 1) {\n      this.setState({\n        secilenMalzemeler: this.state.secilenMalzemeler.map((secilen) => {\n          if (secilen.id === malzeme.id) {\n            return { ...secilen, count: secilen.count - 1 };\n          }\n          return secilen;\n        }),\n      });\n    } else {\n      this.setState({\n        secilenMalzemeler: this.state.secilenMalzemeler.filter((secilen) => {\n          return secilen.id !== malzeme.id;\n        }),\n      });\n    }\n  };\n\n  geneltoplam = () => {\n    let totals = 10;\n    this.state.secilenMalzemeler.map((malzeme) => {\n      totals += malzeme.price * malzeme.count;\n      return totals;\n    });\n    return totals;\n  };\n\n  tane = (malzeme) => {\n    let x;\n    if (this.state.secilenMalzemeler.id === malzeme.id) {\n      x = this.state.secilenMalzemeler\n        .filter((malzeme) => malzeme.count)\n        .map((d) => `${d.count}`);\n    }\n\n    return x;\n  };\n\n  sıfırla = () => {\n    this.setState({ secilenMalzemeler: [] });\n  };\n\n  fisKes = (a, urunler) => {\n    let tarih = new Date();\n    if (\n      window.confirm(` \n                                        Barbeque Burger\n________________________________________________________________________\nTarih: ${tarih.getUTCDate()}/${tarih.getUTCMonth()}/${tarih.getUTCFullYear()}     Saat: ${\n        tarih.getUTCHours() + 3\n      }:${tarih.getUTCMinutes()}:${tarih.getUTCSeconds()}\nMalzemeler : ${urunler}\nKdv(%18)= ${(a * 18) / 100}₺\nGenel Toplam = ${a}₺\nDevam Edilsin mi?`)\n    ) {\n      if (window.confirm(\"Kredi Kartı Kullanacak mısınız?\")) {\n        if (\n          window.prompt(`Tutar ${a} tl Onaylıyor musunuz?\nŞifrenizi Girin.`)\n        ) {\n          alert(`\n                                          Barbeque Burger\n________________________________________________________________________\n    Tarih: ${tarih.getUTCDate()}/${tarih.getUTCMonth()}/${tarih.getUTCFullYear()}     Saat: ${\n            tarih.getUTCHours() + 3\n          }:${tarih.getUTCMinutes()}:${tarih.getUTCSeconds()}\n    Malzemeler : ${urunler}\n    Kdv(%18)= ${(a * 18) / 100}₺\n    Genel Toplam = ${a}₺\n    ${a}₺ kredi kartı ödemesi yapılmıştır.,\n    Bizi seçtiğiniz için teşekkür ederiz :)`);\n          this.sıfırla();\n        }\n      } else {\n        alert(`\n                                          Barbeque Burger\n________________________________________________________________________\n    Tarih: ${tarih.getUTCDate()}/${tarih.getUTCMonth()}/${tarih.getUTCFullYear()}     Saat: ${\n          tarih.getUTCHours() + 3\n        }:${tarih.getUTCMinutes()}:${tarih.getUTCSeconds()}\n    Malzemeler : ${urunler}\n    Kdv(%18)= ${(a * 18) / 100}₺\n    Genel Toplam = ${a}₺\n    ${a}₺ nakit ödeme yapılmıştır.\n    Bizi seçtiğiniz için teşekkür ederiz :)\n    `);\n        this.sıfırla();\n      }\n    }\n  };\n\n  render() {\n    const { secilenMalzemeler } = this.state;\n    return (\n      <div>\n        <div>\n          <h1>Barbeque Burger</h1>\n        </div>\n        <table>\n          <tbody>\n            <tr>\n              <td\n                style={{\n                  width: \"500px\",\n                  height: \"845px\",\n                  margin: \"auto\",\n                  maxWidth: \"500px\",\n                  maxHeight: \"845px\",\n                  border: \"5px solid rgb(204, 51, 0)\",\n                }}\n              >\n                <Liste\n                  malzemeler={malzemeler}\n                  secilenMalzemeler={secilenMalzemeler}\n                  malzemeEkle={this.malzemeEkle}\n                  malzemeCikar={this.malzemeCikar}\n                  sıfırla={this.sıfırla}\n                  geneltoplam={this.geneltoplam}\n                  tane={this.tane}\n                  fisKes={this.fisKes}\n                />\n              </td>\n              <td\n                style={{\n                  width: \"1500px\",\n                  height: \"845px\",\n                  margin: \"auto\",\n                  maxHeight: \"845px\",\n                  border: \"5px solid rgb(204, 51, 0)\",\n                }}\n              >\n                <Hamburger\n                  secilenMalzemeler={secilenMalzemeler}\n                  malzemeEkle={this.malzemeEkle}\n                  malzemeCikar={this.malzemeCikar}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default HamburgerApp;\n","import Hamburger from \"./Hamburger\";\n\nexport default Hamburger;","import React from 'react';\nimport \"./styles.css\";\n\nconst Hamburger = (props) => {\n\n    function invertColor(hex) {\n        if (hex.indexOf('#') === 0) {\n            hex = hex.slice(1);\n        }\n        let r = (255 - parseInt(hex.slice(0, 2), 16)).toString(16),\n            g = (255 - parseInt(hex.slice(2, 4), 16)).toString(16),\n            b = (255 - parseInt(hex.slice(4, 6), 16)).toString(16);\n        return '#' + padZero(r) + padZero(g) + padZero(b);\n    }\n    function padZero(str, len) {\n        len = len || 2;\n        var zeros = new Array(len).join('0');\n        return (zeros + str).slice(-len);\n    }\n    return (\n        <>\n            <div>\n                <div className=\"BreadTop\" style={{\n                    height: \"100px\"\n                }} />\n                {\n                    props.secilenMalzemeler.map((malzeme) => {\n                        const elements = [];\n                        const malzemeDivi = <div\n                            key={malzeme.id}\n                            style={{\n                                height: \"20px\",\n                                backgroundColor: malzeme.color, //malzeme rengi\n                               \n                                width: \"30%\",\n                                position: \"relative\",\n                                margin: \"0px auto\",\n                                marginTop : \"1px\",\n                                borderRadius:\"20px\",\n                                color: invertColor(malzeme.color), //malzeme yazısı\n                                fontFamily: \"Times New Roman\",\n                                fontWeight : \"bold\",\n                                textAlign: \"center\"\n                            }}\n                            \n                        >\n                            {malzeme.name}\n                          \n                        </div>;\n                        for(let i=0; i< malzeme.count;i++){\n                            elements.push(malzemeDivi);\n                        }\n                        return elements;\n                    })\n                }\n                <div className=\"BreadBottom\" style={{\n                    height: \"75px\"\n                }}/>\n            </div>\n        </>\n    );\n};\n\nexport default Hamburger;","import React from 'react';\nimport './App.css';\nimport {HamburgerApp} from \"./components\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <HamburgerApp />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}